/*
 * MOONStroks.js Ver.1.2.0 (2013/09/26) by fintopo
 * https://github.com/fintopo/MOONStrokes
 * 
 * enchantMOONのストロークデータを管理、加工するライブラリ
 */

var MOONStrokes = MOONStrokes || {};

(function(DEBUG){
  /* Paper, Strokeに追加するundersocreのメソッド */
  var methods = ['forEach', 'each', 'map', 'collect', 'reduce', 'foldl',
    'inject', 'reduceRight', 'foldr', 'find', 'detect', 'filter', 'select',
    'reject', 'every', 'all', 'some', 'any', 'include', 'contains', 'invoke',
    'max', 'min', 'toArray', 'size', 'first', 'head', 'take', 'initial', 'rest',
    'tail', 'drop', 'last', 'without', 'indexOf', 'shuffle', 'lastIndexOf',
    'isEmpty', 'chain'];

  /* 
   * MOONStrokes.Point 
   */ 
  var Point = MOONStrokes.Point = function(x, y, p) {
    this.x = x;
    this.y = y;
    this.p = p;
  };
  _.extend(Point.prototype, {
    moveTo: function(x, y) {
      this.x += x;
      this.y += y;
    },
    inRange: function(x0, y0, x1, y1){
      // (x0, y0)-(x1, y1)の範囲に含まれているか調べる
      // 戻り値： 含まれている場合に true、含まれていない倍に false
      return (x0 <= this.x) && (this.x <= x1)
          && (y0 <= this.y) && (this.y <= y1);
    },
    getData: function(){
      return [this.x, this.y, this.p];
    }
  });

  /* 
   * MOONStrokes.Stroke 
   */ 
  var Stroke = MOONStrokes.Stroke = function(stroke) {
    stroke = _.extend({
       width: 2.5
      ,color: -1
      ,type: "pen"
      ,data: []
    }, stroke);
    //
    this.points = [];
    var data = stroke.data;
    var count = data.length;
    for (var i=0; i<count; i+=3) {
      this.add(data[i], data[i+1], data[i+2]);
    }
    this._setLength();
    //
    this.info = _.extend(stroke, {data: []}); // 初期値保存。dataはクリアしておく
  };
  _.extend(Stroke.prototype, {
    moveTo: function(x, y) {
      _(this.points).each(function(point){
        return point.moveTo(x, y);
      });
    },
    eraseStrokes: function(x0, y0, x1, y1){
      // (x0, y0)-(x1, y1)の範囲のポイントを削除し、ストロークを分割する。
      // 戻り値：分割したストロークの配列
      var _this = this;
      var strokes = _(this.points).reduce(function(memo, point){ // 範囲内のポイントを削除し、ストロークを分割する。
        if (point.inRange(x0, y0, x1, y1)) { // 削除対象
          memo.add_mode = false; // 次から新しいストロークにする
        } else { // 残す点
          if (memo.add_mode) { // 追記モード
            _(memo.strokes).last().add(point);
          } else { // 新しいストロークとして追加
            var stroke = new Stroke(_this.info);
            stroke.add(point);
            memo.strokes.push(stroke);
            memo.add_mode = true;
          }
        }
        return memo;
      }, {
        add_mode: false // 追記モード
        ,strokes: [] // 分割したストローク
      }).strokes;
      return _(strokes).reject(function(stroke){ // 不完全なストロークを削除する
        return (stroke.length < 2);
      }) ;
    },
    beautifyLine: function(count){
      // ストロークの美化処理
      // 現在のストロークに対して移動平均を計算する
      // count: 移動平均を計算する要素数。前後count個に対して計算する
      var _this = this;
      count = count || 2;
      //
      var points = _(_this.points).clone();
      _this.points = [];      
      var buffers = [];      
      var add_point = function(){
        var len = buffers.length;
        var x = _(buffers).reduce(function(sum, point){
          return sum + point.x;
        }, 0) / len;
        var y = _(buffers).reduce(function(sum, point){
          return sum + point.y;
        }, 0) / len;
        var p = _(buffers).reduce(function(sum, point){
          return sum + point.p;
        }, 0) / len;
        _this.add(x, y, p);
      };
      _((count+1)).times(function(){
        var point = points.shift();
        buffers.push(point);        
      });
      add_point();
      _(points).each(function(point){
        buffers.push(point);        
        add_point();
        buffers.shift();
      });
      _(count).times(function(){
        add_point();
        buffers.shift();
      });
    },
    left: function(){
      return _(this.points).min(function(point){
        return point.x;
      }).x;
    },
    top: function(){
      return _(this.points).min(function(point){
        return point.y;
      }).y;
    },
    right: function(){
      return _(this.points).max(function(point){
        return point.x;
      }).x;
    },
    bottom: function(){
      return _(this.points).max(function(point){
        return point.y;
      }).y;
    },
    minStrength: function(){
      return _(this.points).min(function(point){
        return point.p;
      }).p;
    },
    maxStrength: function(){
      return _(this.points).max(function(point){
        return point.p;
      }).p;
    },
    aveStrength: function(){
      return _(this.points).reduce(function(sum, point){
        return sum + point.p;
      }, 0) / this.points.length;
    },
    sumStrength: function(){
      return _(this.points).reduce(function(sum, point){
        return sum + point.p;
      }, 0);
    },
    add: function(x, y, p){
      var point;
      if (_.isNumber(x) && _.isNumber(y) && _.isNumber(p)) {
        point = new Point(x, y, p);
      } else if (_.isObject(x)) { // Pointオブジェクトの場合
        point = x;
      }
      var ret = this.points.push(point);
      this._setLength();
      return ret;
    },
    getData: function(){
      this.info.data = this.chain()
          .map(function(point){
            return point.getData();
          })
          .flatten()
          .value();
      return this.info;
    },
    _setLength: function(){
      this.length = this.points.length;
    }
  });
  /* Undersoreのメソッドを追加 */
  _.each(methods, function(method) {
    Stroke.prototype[method] = function() {
      var args = [].slice.call(arguments);
      args.unshift(this.points);
      return _[method].apply(_, args);
    };
  });

  /*
   * MOONStrokes.Paper
   */
  var Paper = MOONStrokes.Paper = function(id) {
    this.id = id;
    this.info = (DEBUG) ? DEBUG : MOON.getPaperJSON(this.id);
    this.strokes = _(this.info.strokes).map(function(stroke){
      return new Stroke(stroke);
    });
    this._setLength();
  };
  _.extend(Paper.prototype, {
    moveTo: function(x, y) {
      _(this.strokes).each(function(stroke){
        return stroke.moveTo(x, y);
      });
    },
    eraseStrokes: function(x0, y0, x1, y1){
      // (x0, y0)-(x1, y1)の範囲のストロークを削除する
      // ストロークの一部が含まれる場合は、ストロークが分割される。
      this.strokes = _(this.strokes).chain()
          .map(function(stroke){
            return stroke.eraseStrokes(x0, y0, x1, y1);
          })
          .flatten()
          .value();
      this._setLength();
    },
    rectangle: function(x0, y0, x1, y1, size, options){
      // (x0, y0)-(x1, y1)で長方形を描画する
      // size: 筆圧
      // options: ストロークの初期値
      options = _(options||{}).extend({
        data: []
      });
      var stroke = new Stroke(options);
      stroke.add(x0, y0, size);
      stroke.add(x0, y1, size);
      stroke.add(x1, y1, size);
      stroke.add(x1, y0, size);
      stroke.add(x0, y0, size);
      this.push(stroke);
      return stroke;
    },
    pop: function(){
      var ret = this.strokes.pop();
      this._setLength();
      return ret;
    },
    push: function(stroke){
      var ret = this.strokes.push(stroke);
      this._setLength();
      return ret;
    },
    save: function(){
      this.info.strokes = this.map(function(stroke){
        var ret = stroke.getData();
        if (ret.data.length > 0) {
          return ret;
        }
      });
      if (DEBUG) {
        console.log(this.info);
      } else {
        MOON.setPaperJSON(this.id, this.info);
      }
    },
    _setLength: function(){
      this.length = this.strokes.length;
    }
  });
  /* Undersoreのメソッドを追加 */
  _.each(methods, function(method) {
    Paper.prototype[method] = function() {
      var args = [].slice.call(arguments);
      args.unshift(this.strokes);
      return _[method].apply(_, args);
    };
  });

  /*
   * MOONStrokes.Page
   */
  var Page = MOONStrokes.Page = function() {
    // 現在のページデータを取得する
    this.info = (DEBUG) ? {backing: ''} : MOON.getCurrentPage();
    this.paper = new Paper(this.info.backing);
  };
  _.extend(Page.prototype, {
  });

})();
//})({"version":"0.2","x":0,"y":0,"width":768,"height":1024,"scale":1.0,"color":-16777216,"transparent":false,"strokes":[{"width":2.5,"color":-1,"type":"pen","data":[242.15625,631.0,0.7231678,241.30078,631.95087,0.72687155,240.1875,633.2143,0.7319012,239.17383,634.43304,0.73734134,238.125,635.7143,0.742509,237.01172,637.0536,0.7460024,235.875,638.4286,0.74906266,234.74414,639.8036,0.75268173,233.625,641.2143,0.756206,232.54688,642.6964,0.7591904,231.46875,644.2143,0.76200074,230.34375,645.7322,0.7648422,229.21875,647.28577,0.76775175,228.07617,648.9777,0.7709665,227.0625,650.5715,0.7740917,226.33008,651.83936,0.77665377,225.84375,652.8572,0.7791265,225.65625,654.1429,0.7847521,225.65625,655.28577,0.7884801,225.65625,656.3572,0.7909557,225.75,657.5,0.79403937,225.84375,658.5,0.7971111,225.9375,659.5,0.800171,226.03125,660.4286,0.8026106,226.125,661.2143,0.80504274,226.125,662.1429,0.8074676,226.21875,662.8572,0.80988514,226.3125,663.7143,0.812897,226.3125,664.5,0.81589776,226.40625,665.2143,0.81769294,226.5,665.78577,0.82008034,226.5,666.5715,0.8218664,226.59375,667.28577,0.8230549,226.59375,667.8572,0.82483447,226.59375,668.5,0.8272013,226.59375,669.0715,0.8277919,226.78125,669.5715,0.82956135,226.875,670.2143,0.82956135,227.15625,670.7143,0.8377692,227.15625,670.4286,0.770294]},{"width":2.5,"color":-1,"type":"pen","data":[339.375,704.1429,0.21885689,339.46875,704.78577,0.2966084,339.5625,705.4286,0.7278834,339.84375,705.28577,0.7332356,339.84375,705.00006,0.73854893,340.125,704.5715,0.743167,340.3125,704.0715,0.74710256,340.5,703.2143,0.7516681,340.59375,702.3572,0.756206,340.875,701.2143,0.76071686,341.0625,699.8572,0.7658396,341.0625,699.2143,0.7696592,341.34375,698.50006,0.7721952,341.53125,697.5715,0.7734601,341.625,696.7143,0.77598363,341.625,696.0715,0.77661324,341.71875,695.3572,0.7772423,341.8125,694.6429,0.7791265,341.90625,694.00006,0.77975357,342.09375,693.2143,0.7810062,342.09375,692.4286,0.78225684,342.09375,691.7143,0.7828814,342.1875,691.0715,0.7828814,342.28125,690.28577,0.78350544,342.28125,689.50006,0.78537464,342.28125,688.78577,0.7866183,342.46875,688.2143,0.78971887,342.46875,687.50006,0.7934236,342.375,686.78577,0.79465467,342.28125,686.1429,0.79588383,342.28125,685.28577,0.79588383,342.1875,684.5715,0.797724,342.1875,683.8572,0.797724,342.09375,683.1429,0.797724,342.09375,682.28577,0.797724,342.0,681.5,0.7971111,342.09375,680.8572,0.797724,342.09375,679.2947,0.79745585,342.09375,677.6429,0.7971111,342.1875,676.28577,0.7971111,342.1875,675.0,0.7983365,342.1875,673.7143,0.797724,342.1875,672.3572,0.7983365,342.1875,671.0715,0.7983365,342.28125,670.0,0.7983365,342.375,668.8572,0.8013917,342.28125,668.28577,0.8026106,342.28125,667.5715,0.8032193,342.28125,666.8572,0.8026106,342.28125,666.2143,0.8026106,342.28125,665.5715,0.8038276,342.28125,664.8572,0.8038276,342.1875,664.1429,0.80504274,342.09375,663.5,0.80504274,342.1875,662.8572,0.8038276,342.28125,662.28577,0.8038276,342.1875,661.6429,0.8032193,342.28125,661.0,0.8032193,342.09375,660.28577,0.8032193,342.09375,659.6429,0.8038276,342.09375,659.1429,0.8044354,342.09375,658.5,0.8026106,342.0,657.8572,0.80564964,341.8125,657.3572,0.8212715]},{"width":5.0,"color":-1,"type":"pen","data":[320.71875,244.28572,0.2761274,321.0,244.85715,0.4040363,320.90625,245.50002,0.4605662,320.625,245.85715,0.48637345,320.25,246.35715,0.5388159,319.59375,246.7143,0.5636427,318.84375,246.85715,0.58575463,317.90625,247.07144,0.6054494,317.0625,247.00002,0.62374014,316.125,246.85715,0.63998413,315.09375,246.64287,0.65433365,314.15625,246.57144,0.66837513,313.125,246.2143,0.6806931,312.09375,245.85715,0.6927921,310.875,245.57144,0.7032949,309.5625,245.14287,0.71295786,308.25,244.50002,0.72113734,306.9375,244.00002,0.72855455,305.625,243.2143,0.73589706,304.125,242.28572,0.7418505,302.625,241.14287,0.7464481,301.21875,239.85715,0.7510176,299.71875,238.50002,0.75426453,298.40625,237.00002,0.75749755,297.09375,235.57144,0.76200074,295.6875,233.85715,0.7652011,294.46875,232.42859,0.76775175,293.25,230.78572,0.7696592,292.125,229.28572,0.77156204,291.09375,227.64287,0.7721952,290.0625,226.00002,0.7734601,289.21875,224.35715,0.7740917,288.5625,222.50002,0.7747229,287.8125,220.64287,0.7753535,287.25,218.64287,0.7747229,286.875,216.64287,0.7753535,286.6875,214.64287,0.77598363,286.78125,212.64287,0.77598363,286.96875,210.64287,0.77661324,287.0625,208.64287,0.77661324,287.625,206.78572,0.7772423,288.09375,205.00002,0.77598363,288.75,203.07144,0.77598363,289.40625,201.35715,0.7753535,290.25,199.42857,0.7734601,291.09375,197.78572,0.7740917,292.03125,196.14287,0.7740917,293.25,194.50002,0.7753535,294.5625,192.85715,0.77661324,296.0625,191.50002,0.7772423,297.46875,190.2143,0.77661324,299.15625,188.78572,0.77598363,300.84375,187.64287,0.7747229,302.71875,186.35715,0.7747229,304.59375,185.35715,0.7753535,306.46875,184.28572,0.7747229,308.4375,183.42857,0.77598363,310.21875,182.42857,0.7753535,312.0,181.64287,0.7753535,313.6875,181.07144,0.77598363,315.5625,180.57144,0.7753535,317.34375,180.2143,0.7740917,319.21875,180.00002,0.7728279,321.1875,179.78572,0.7721952,323.0625,179.64287,0.7728279,325.125,179.64287,0.7747229,327.46875,179.57144,0.7753535,329.625,179.57144,0.7753535,331.59375,179.57144,0.7753535,333.5625,179.7143,0.7747229,335.34375,179.85715,0.7753535,337.125,180.14287,0.7747229,338.71875,180.35715,0.7747229,340.125,180.7143,0.7740917,341.53125,181.2143,0.7734601,342.65625,181.78572,0.7734601,343.78125,182.50002,0.7734601,344.90625,183.28572,0.7734601,345.9375,184.07144,0.7740917,346.78125,184.85715,0.7740917,347.71875,185.7143,0.7747229,348.5625,186.7143,0.7753535,349.3125,187.7143,0.77598363,350.0625,188.78572,0.77598363,350.8125,189.85715,0.77598363,351.375,191.14287,0.7753535,352.03125,192.28572,0.7753535,352.5,193.57144,0.77598363,352.875,194.85715,0.7772423,353.34375,196.14287,0.77975357,353.71875,197.50002,0.78163177,354.09375,199.00002,0.78412896,354.5625,200.42857,0.7859967,354.9375,201.85715,0.78786,355.125,203.57144,0.78971887,355.5,205.35715,0.7909557,355.59375,207.2143,0.79280734,355.78125,209.2143,0.79588383,355.875,211.14287,0.79894847,355.875,213.14287,0.8032193,355.78125,215.14287,0.8074676,355.78125,217.14287,0.81109124,355.78125,219.14287,0.8146988,355.6875,220.85715,0.81769294,355.6875,222.64287,0.82008034,355.59375,224.35715,0.8236485,355.3125,226.07144,0.8266102,355.125,227.7143,0.8301503,354.84375,229.35715,0.832502,354.5625,230.85715,0.8348471,354.09375,232.42859,0.83835244,353.625,234.14287,0.84126234,353.0625,235.7143,0.84474105,352.59375,237.2143,0.84647506,352.125,238.50002,0.8476291,351.46875,239.85715,0.8493572,350.90625,241.2143,0.8505073,350.15625,242.35715,0.8533758,349.5,243.28572,0.85737556,348.65625,244.14287,0.8607892,347.8125,245.00002,0.8636235,346.78125,245.7143,0.8664486,345.84375,246.42859,0.8681392,344.625,247.00002,0.8709496,343.5,247.35715,0.8731915,342.09375,247.64287,0.8759857,340.59375,248.07144,0.879327,339.09375,248.42859,0.8815476,337.78125,248.7143,0.8848679,336.28125,249.14287,0.8870746,334.78125,249.28572,0.888726,333.46875,249.57144,0.8914715,332.0625,249.85715,0.89366186,330.75,250.14287,0.8953011,329.53125,250.42859,0.8969373,328.125,250.50002,0.8974821,326.625,250.64287,0.8985706,325.21875,250.64287,0.8996578,323.8125,250.78572,0.9012861,322.3125,250.78572,0.9023701,321.0,250.7143,0.90291154,319.59375,250.57144,0.9034527,318.28125,250.42859,0.90507424,317.34375,250.35715,0.9066928,316.3125,250.2143,0.9077703,315.46875,250.07144,0.9099214,314.71875,249.85715,0.9099214,314.0625,249.64287,0.9104584,313.40625,249.42859,0.9126032,312.84375,249.2143,0.9126032,312.375,248.85715,0.9136737,311.90625,248.50002,0.9136737,311.625,248.07144,0.9142085,311.25,247.57144,0.8212715]},{"width":5.0,"color":-1,"type":"pen","data":[394.59375,261.78574,0.30633584,395.25,261.28574,0.65433365,395.25,261.0,0.66983604,394.6875,260.85715,0.6828438,393.9375,261.0,0.69490534,392.8125,261.4286,0.70606923,391.40625,262.07144,0.7163773,389.53125,263.07144,0.72451824,388.43555,263.64734,0.7277584,387.28125,264.28574,0.7305644,386.11523,265.02234,0.73298645,384.9375,265.78574,0.7352326,383.76563,266.49554,0.7375967,382.59375,267.2143,0.7398713,381.42773,267.9732,0.74185115,380.25,268.78574,0.74382436,379.0547,269.68307,0.74595785,377.8125,270.64288,0.74840987,376.48828,271.66074,0.7514645,375.09375,272.7143,0.7549122,373.60547,273.7768,0.75858635,372.09375,274.85715,0.7626419,370.62305,275.95538,0.767351,369.1875,277.07144,0.7721952,367.82813,278.2098,0.77676946,366.46875,279.35715,0.7810062,365.0332,280.48218,0.7846361,363.5625,281.64288,0.78786,362.05078,282.91965,0.7908397,360.5625,284.2143,0.7934236,359.18555,285.43304,0.7953857,357.84375,286.64288,0.7971111,356.47266,287.91074,0.7989864,355.125,289.14288,0.8007816,353.8418,290.2411,0.80230653,352.59375,291.28574,0.8038276,351.35156,292.3393,0.8055738,350.15625,293.35715,0.8074676,349.0547,294.3036,0.8096202,348.0,295.2143,0.8116936,346.9453,296.12946,0.8131613,345.9375,297.0,0.8146988,344.15625,298.5,0.8194842,342.75,299.7143,0.82246083,341.4375,300.85715,0.8236485,340.40625,301.64288,0.82483447,339.65625,302.35715,0.8254268,339.09375,303.0,0.82601875,339.09375,303.5,0.8242417,339.375,303.85715,0.8242417,339.65625,304.2143,0.82601875,340.40625,304.5,0.8266102,341.4375,304.64288,0.8277919,342.84375,304.85715,0.8307389,344.625,305.14288,0.83308893,346.78125,305.28574,0.83543235,349.03125,305.4286,0.8371856,350.29688,305.5045,0.837587,351.65625,305.57144,0.8377692,353.09766,305.61163,0.83769643,354.65625,305.64288,0.8377692,356.3789,305.68304,0.8384255,358.21875,305.7143,0.8395176,360.15234,305.7143,0.84115285,362.15625,305.7143,0.8430035,364.1953,305.74554,0.84463334,366.28125,305.78574,0.84647506,368.41406,305.8125,0.84913915,370.59375,305.85715,0.85165584,372.8203,305.95984,0.8530187,375.09375,306.07144,0.85394835,377.42578,306.14285,0.85480666,379.78125,306.2143,0.85566366,382.125,306.3125,0.8568051,384.46875,306.4286,0.85794544,386.80664,306.5625,0.85876435,389.15625,306.7143,0.8596528,391.5586,306.87503,0.8610371,393.9375,307.07144,0.8624909,396.19922,307.34824,0.863659,398.4375,307.64288,0.8647546,400.73438,307.89288,0.8658843,403.03125,308.14288,0.8670125,405.3047,308.42413,0.86817425,407.53125,308.7143,0.8692645,409.66406,309.0,0.8701077,411.75,309.28574,0.8709496,413.82422,309.5625,0.872106,415.875,309.85715,0.8731915,417.91992,310.20538,0.8737862,419.90625,310.57144,0.8743102,421.79297,310.9375,0.87518305,423.5625,311.28574,0.8759857,425.15625,311.58038,0.8762996,426.65625,311.85715,0.87654346,428.1504,312.14288,0.8771356,429.5625,312.4286,0.87765795,430.83984,312.7143,0.8776928,432.0,313.0,0.87765795,433.96875,313.57144,0.87821466,435.65625,313.85715,0.878771,437.0625,314.2143,0.87821466,438.09375,314.4286,0.879327,438.9375,314.5,0.89366186,439.3125,314.2143,0.8963922,439.5,313.7143,0.8963922,439.5,313.07144,0.89584684,439.125,312.07144,0.89584684,438.5625,311.07144,0.89584684,437.625,309.64288,0.8963922,436.5,308.0,0.8980265,435.09375,306.07144,0.8974821,433.59375,304.14288,0.8974821,432.8086,303.09824,0.8977543,432.0,302.0,0.8980265,431.17383,300.83038,0.8980265,430.3125,299.64288,0.8980265,429.38672,298.5,0.89829856,428.4375,297.35715,0.8985706,427.5,296.1875,0.8986386,426.5625,295.0,0.8985706,425.625,293.78125,0.8983326,424.6875,292.57144,0.8980265,423.74414,291.4107,0.8977543,422.8125,290.28574,0.8974821,421.92188,289.20093,0.89720976,421.03125,288.14288,0.8969373,420.0879,287.10272,0.8965966,419.15625,286.07144,0.8963922,418.3125,285.03125,0.8966307,417.46875,284.0,0.8969373,416.51367,282.99106,0.8969714,415.59375,282.0,0.8969373,414.1875,280.07144,0.8969373,412.6875,278.35715,0.8974821,411.1875,276.57144,0.8969373,409.875,275.0,0.8974821,408.5625,273.35715,0.8980265,407.25,271.85715,0.8985706,406.125,270.57144,0.8996578,405.0,269.4286,0.8996578,403.78125,268.28574,0.8996578,402.65625,267.28574,0.9002009,401.8125,266.5,0.9012861,401.0625,265.85715,0.9023701,400.21875,265.35715,0.90453404]},{"width":5.0,"color":-1,"type":"pen","data":[241.875,318.57144,0.22545707,241.125,317.85715,0.2966084,240.65625,317.07144,0.36461255,240.1875,316.35715,0.51278853,240.28125,316.35715,0.5369986,240.65625,316.78574,0.56277484,241.40625,317.57144,0.58908284,242.625,318.78574,0.6102737,244.3125,320.57144,0.62842417,245.41406,321.71875,0.6370183,246.65625,323.0,0.6453079,247.99805,324.375,0.6533966,249.46875,325.85715,0.66102207,251.1211,327.4777,0.6677853,252.84375,329.14288,0.6741999,254.51953,330.7545,0.6807368,256.21875,332.35715,0.68712497,257.98828,333.96878,0.6931471,259.78125,335.57144,0.6991127,261.55078,337.14734,0.7053744,263.34375,338.7143,0.71158546,265.23047,340.2768,0.71748525,267.09375,341.85715,0.7231678,268.81055,343.51788,0.7285975,270.46875,345.14288,0.73390186,272.12695,346.6161,0.7393726,273.75,348.00003,0.74448115,275.32617,349.31253,0.74857605,276.84375,350.57144,0.752318,278.29102,351.81253,0.7562856,279.65625,353.00003,0.7600741,280.91602,354.10272,0.76336366,282.09375,355.14288,0.7664775,283.20117,356.12054,0.7697378,284.25,357.07144,0.7728279,285.2578,358.0536,0.77551126,286.21875,359.00003,0.7778709,288.0,360.64288,0.78163177,289.5,362.00003,0.78412896,290.625,363.2143,0.78537464,291.5625,364.2143,0.7859967,292.21875,365.14288,0.7859967,292.875,366.00003,0.7866183,293.34375,366.57144,0.7866183,293.15625,366.78574,0.6720215]},{"width":5.0,"color":-1,"type":"pen","data":[290.53125,313.2143,0.25400025,290.71875,312.07144,0.32189566,290.71875,311.0,0.38673005,290.71875,310.2143,0.47002006,290.25,309.7143,0.492366,289.40625,309.85715,0.5175323,288.5625,310.4286,0.5424321,287.8125,311.35715,0.5662381,286.6875,312.64288,0.5874211,285.5625,314.35715,0.60383266,284.93555,315.37054,0.6124244,284.25,316.5,0.6213849,283.46484,317.77234,0.63098854,282.65625,319.14288,0.64074737,281.90625,320.57593,0.6499878,281.15625,322.07144,0.6595416,280.38867,323.62054,0.6704572,279.5625,325.2143,0.6814108,278.60156,326.83035,0.6912501,277.59375,328.5,0.70050955,276.61523,330.25894,0.7094754,275.625,332.07144,0.71774054,274.61133,333.9152,0.724859,273.5625,335.78574,0.7312331,272.45508,337.65628,0.73714197,271.3125,339.57144,0.742509,270.1582,341.59378,0.7472679,268.96875,343.64288,0.7516681,267.70898,345.65182,0.7558841,266.4375,347.64288,0.7600741,265.2129,349.62054,0.7646001,264.0,351.57144,0.76902395,262.7754,353.48215,0.7728693,261.5625,355.35715,0.77661324,260.3789,357.20093,0.78065354,259.21875,359.00003,0.7847521,258.09375,360.7411,0.78879,256.96875,362.4286,0.79280734,255.79102,364.05362,0.7968044,254.625,365.64288,0.8007816,253.51758,367.25,0.80485153,252.46875,368.78574,0.80867726,251.50781,370.14288,0.81191975,250.59375,371.4286,0.8146988,249.67969,372.73663,0.81694615,248.8125,374.00003,0.81888753,248.04492,375.1786,0.82089883,247.3125,376.28574,0.82246083,245.8125,378.28574,0.8230549,244.59375,380.14288,0.8242417,243.375,381.7143,0.8254268,242.4375,383.2143,0.8254268,241.59375,384.50003,0.8266102,241.125,385.57144,0.8266102]}]});
